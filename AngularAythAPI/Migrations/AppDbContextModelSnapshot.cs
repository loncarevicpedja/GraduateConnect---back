// <auto-generated />
using System;
using AngularAuthAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularAythAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AngularAythAPI.Models.Commission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Commisions", (string)null);
                });

            modelBuilder.Entity("AngularAythAPI.Models.Labor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CommissionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfDefense")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfSubmission")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommissionId");

                    b.HasIndex("ProfesorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Labors", (string)null);
                });

            modelBuilder.Entity("AngularAythAPI.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UserId");

                    b.ToTable("Themes", (string)null);
                });

            modelBuilder.Entity("AngularAythAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CommissionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentThemesId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsLaborId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.HasIndex("StudentThemesId");

                    b.HasIndex("StudentsLaborId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CommissionUser", b =>
                {
                    b.Property<int>("CommissionMembersId")
                        .HasColumnType("int");

                    b.Property<int>("CommissionsId")
                        .HasColumnType("int");

                    b.HasKey("CommissionMembersId", "CommissionsId");

                    b.HasIndex("CommissionsId");

                    b.ToTable("CommissionMembers", (string)null);
                });

            modelBuilder.Entity("AngularAythAPI.Models.Labor", b =>
                {
                    b.HasOne("AngularAythAPI.Models.Commission", "Commission")
                        .WithMany()
                        .HasForeignKey("CommissionId");

                    b.HasOne("AngularAythAPI.Models.User", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId");

                    b.HasOne("AngularAythAPI.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commission");

                    b.Navigation("Profesor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AngularAythAPI.Models.Theme", b =>
                {
                    b.HasOne("AngularAythAPI.Models.User", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId");

                    b.HasOne("AngularAythAPI.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AngularAythAPI.Models.User", null)
                        .WithMany("Themes")
                        .HasForeignKey("UserId");

                    b.Navigation("Profesor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AngularAythAPI.Models.User", b =>
                {
                    b.HasOne("AngularAythAPI.Models.User", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AngularAythAPI.Models.Theme", "StudentThemes")
                        .WithMany()
                        .HasForeignKey("StudentThemesId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AngularAythAPI.Models.Labor", "StudentsLabor")
                        .WithMany()
                        .HasForeignKey("StudentsLaborId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Profesor");

                    b.Navigation("StudentThemes");

                    b.Navigation("StudentsLabor");
                });

            modelBuilder.Entity("CommissionUser", b =>
                {
                    b.HasOne("AngularAythAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("CommissionMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularAythAPI.Models.Commission", null)
                        .WithMany()
                        .HasForeignKey("CommissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularAythAPI.Models.User", b =>
                {
                    b.Navigation("Themes");
                });
#pragma warning restore 612, 618
        }
    }
}
